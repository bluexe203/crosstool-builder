
# Check environments

ifeq ($(CROSS_ARCH), )
  $(error "CROSS_ARCH is empty.")
endif
ifeq ($(CROSS_ROOT), )
  $(error "CROSS_ROOT is empty.")
endif


# Define default build target

all: build


# Define build targets

download: $(ARCHIVE_NAME)

download-body-default:
	if [ x`echo $(SITE_NAME) | egrep '^[a-z]+://'` != 'x' ]; then \
		if [ -f $(CACHE_NAME) ]; then \
			cp -a $(CACHE_NAME) $(ARCHIVE_NAME) ; \
			if [ 0 -ne $$? ]; then exit 1; fi; \
		else \
			curl $(SITE_NAME) -o $(ARCHIVE_NAME) ; \
			if [ 0 -ne $$? ]; then exit 1; fi; \
			mkdir -p `dirname $(CACHE_NAME)` ; \
			cp -a $(ARCHIVE_NAME) $(CACHE_NAME) ; \
			if [ 0 -ne $$? ]; then exit 1; fi; \
		fi \
	else \
		cp -a $(SITE_NAME) $(ARCHIVE_NAME) ; \
		if [ 0 -ne $$? ]; then exit 1; fi; \
	fi \

$(ARCHIVE_NAME):
	$(MAKE) download-body


extract: $(CONFIGURE_NAME)

extract-body-default:
	tar xf $(ARCHIVE_NAME)

$(CONFIGURE_NAME): $(ARCHIVE_NAME)
	$(MAKE) extract-body


configure: $(MAKEFILE_NAME)

configure-body-default:
	cd $(BASE_NAME) && ./configure

$(MAKEFILE_NAME): $(CONFIGURE_NAME)
	$(MAKE) configure-body


build: $(BINARY_NAME)

build-body-default:
	$(MAKE) -C $(BASE_NAME)

$(BINARY_NAME): $(MAKEFILE_NAME)
	$(MAKE) build-body


install: $(BINARY_NAME)
	$(MAKE) install-body

install-body-default:
	$(MAKE) -C $(BASE_NAME) install


clean:
	$(MAKE) clean-body

clean-body-default:
	rm -rf $(BASE_NAME)


distclean: clean
	$(MAKE) distclean-body

distclean-body-default:
	rm -f $(ARCHIVE_NAME)

.PHONY: FORCE download extract configure build install clean distclean \
	download-body download-body-default \
	extract-body extract-body-default \
	configure-body configure-body-default \
	build-body build-body-default \
	install-body install-body-default \
	clean-body clean-body-default \
	distclean-body distclean-body-default
